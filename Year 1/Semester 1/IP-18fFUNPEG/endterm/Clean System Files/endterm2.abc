.comp 920 010111010010000
.start __endterm2_Start
.depend "_SystemEnumStrict" "20211222160339"
.depend "_SystemStrictLists" "20211222160339"
.depend "StdStrictLists" "20211222160339"
.depend "_SystemEnum" "20211222160339"
.depend "StdEnum" "20211222160339"
.depend "StdMisc" "20211222160339"
.depend "StdFunctions" "20211222160339"
.depend "StdCharList" "20211222160339"
.depend "StdTuple" "20211222160339"
.depend "StdOrdList" "20211222160339"
.depend "StdList" "20211222160339"
.depend "StdClass" "20211222160339"
.depend "StdFile" "20211222160339"
.depend "StdString" "20211222160339"
.depend "_SystemArray" "20211222160339"
.depend "StdArray" "20211222160339"
.depend "StdChar" "20211222160339"
.depend "StdReal" "20211222160339"
.depend "StdInt" "20211222160339"
.depend "StdOverloaded" "20211222160339"
.depend "StdBool" "20211222160339"
.depend "StdEnv" "20211222160339"
.module m_endterm2 "endterm2" "20231212220349"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdList
.implab e_StdList_slength;47
.impmod _SystemArray
.impmod StdReal
.implab e_StdReal_s+;1
.implab e_StdReal_s-;2
.implab e_StdReal_s*;4
.implab e_StdReal_s<;12
.implab e_StdReal_ssqrt;22
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s<;17
.impmod StdBool
.implab e_StdBool_snot
.record r14 aa 2 0 "Point"
.record r17 aa 2 0 "Circle"
.record r23 aaaaa 5 0 "Book"
.desc d30 _hnf _add_arg 3 0 "Node"
.desc d31 _hnf _hnf 0 0 "Leaf"
.desc0 d36 0 "Red"
.desc0 d37 1 "Orange"
.desc0 d38 2 "Yellow"
.desc0 d39 3 "Green"
.desc0 d40 4 "Blue"
.desc0 d41 5 "Indigo"
.desc0 d42 6 "Violet"
.desc d44 _hnf _add_arg 2 0 "BTNode2"
.desc d45 _hnf _hnf 0 0 "BTLeaf2"
.export __endterm2_Start
.o 0 0
__endterm2_Start
	build _ 0 n8
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n8
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea8
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
ea8
.o 0 0
s8
	build _ 0 n2
	build _ 0 n3
	build _ 0 n4
	build _ 0 n5
	pushI 4
	create_array_ _ 1 0
	pushI 3
	update _ 1 0
	pushI 2
	update _ 1 0
	pushI 1
	update _ 1 0
	pushI 0
	update _ 1 0
	build _ 0 n1
.d 2 0
	jmp s7
.n 0 _
.o 1 0
n1
	push_node _cycle_in_spine 0
.o 0 0
ea1
	buildR 3.5
	buildR 1.5
	buildhr r14 2 0
	buildR 2.0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	fill_r r17 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.n 0 _
.o 1 0
n5
	push_node _cycle_in_spine 0
.o 0 0
ea5
	buildR 200.0
	buildR 100.0
	fill_r r14 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.n 0 _
.o 1 0
n4
	push_node _cycle_in_spine 0
.o 0 0
ea4
	buildR 0.0
	buildR 0.5
	fill_r r14 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.n 0 _
.o 1 0
n3
	push_node _cycle_in_spine 0
.o 0 0
ea3
	buildR -25.2
	buildR -4.5
	fill_r r14 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.n 0 _
.o 1 0
n2
	push_node _cycle_in_spine 0
.o 0 0
ea2
	buildR 3.5
	buildR 1.5
	fill_r r14 2 0 2 0 0
	pop_a 2
.d 1 0
	rtn
.o 2 0
s7
	push_a 1
	update_a 1 2
	updatepop_a 0 1
	push_a 0
	push_arraysize _ 1 0
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	push_a 3
	update_b 1 2
	updatepop_b 0 1
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 3 2 ii
	jsr s9
.o 1 0
.d 1 0
	jsr e_StdList_slength;47
.o 0 1 i
	pushI 0
	ltI
.d 0 1 b
	rtn
.o 3 2 ii
s9
	push_b 0
	push_b 2
	ltI
	notB
	push_b 2
	push_a 0
	push_b 2
	push_a 2
	push_b 2
	update_b 2 3
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_a 1 3
	updatepop_a 0 2
	update_b 2 4
	update_b 1 3
	updatepop_b 0 2
.d 3 3 bii
	jmp s11
.o 3 3 bii
s11
	eqB_b TRUE 0
	jmp_true case.1
	jmp case.2
case.1
	push_a 1
	jsr_eval 0
	repl_r_args 2 0
	push_a 2
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 1
	updatepop_b 0 1
	buildh _Nil 0
	update_a 0 5
	pop_a 1
	push_a 0
	select _ 1 0
	jsr_eval 0
	push_r_args 0 2 0
	update_a 1 2
	update_a 0 1
	pop_a 1
	push_a 5
	push_b 1
	push_b 1
	push_a 5
	update_a 1 6
	update_a 2 1
	update_a 3 2
	update_a 4 3
	update_a 5 4
	update_a 0 5
	pop_a 1
	update_a 5 7
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	update_b 1 3
	updatepop_b 0 2
.d 7 2 ii
	jmp s10
case.2
	fillh _Nil 0 2
	pop_a 2
	pop_b 3
.d 1 0
	rtn
.o 7 2 ii
s10
case.3
	push_a 4
	jsr_eval 0
	pushR_a 5
	pop_a 1
	push_a 3
	jsr_eval 0
	repl_r_args 2 0
	push_a 3
	push_a 3
	push_a 3
	update_a 2 4
	update_a 0 2
	update_a 3 0
	update_a 1 3
	update_a 0 1
	pop_a 1
.d 4 1 r
	jsr s6
.o 0 1 b
	jmp_false else.5
	build_r r17 2 0 3 0
	push_a 3
	buildI_b 1
	buildI_b 0
	push_a 3
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	build _ 4 n46
	build_r r14 2 0 1 0
	fillh _Cons 2 8
	pop_a 6
	pop_b 2
.d 1 0
	rtn
else.5
	jmp case.4
case.4
	pushI 1
	push_b 1
	addI
	build_r r17 2 0 3 0
	push_a 6
	push_b 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_a 1 7
	updatepop_a 0 6
	update_b 1 3
	updatepop_b 0 2
.d 3 2 ii
	jmp s9
.n 4 _ ea46
.o 1 0
n46
	push_node _cycle_in_spine 4
.o 5 0
ea46
.o 5 0
s46
	push_a 2
	jsr_eval 0
	pushI_a 3
	pop_a 1
	pushI 1
	push_a 1
	jsr_eval 0
	pushI_a 2
	pop_a 1
	addI
	push_a 3
	buildh ARRAY 1
	push_a 1
	update_a 1 5
	updatepop_a 0 4
.d 3 2 ii
	jmp s9
.o 4 1 r
s6
	push_a 3
	jsr_eval 0
	pushR_a 4
	pop_a 1
	push_a 1
	jsr_eval 0
	pushR_a 2
	pop_a 1
	subR
	push_a 3
	jsr_eval 0
	pushR_a 4
	pop_a 1
	push_a 1
	jsr_eval 0
	pushR_a 2
	pop_a 1
	subR
	mulR
	push_a 2
	jsr_eval 0
	pushR_a 3
	pop_a 1
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	subR
	push_a 2
	jsr_eval 0
	pushR_a 3
	pop_a 1
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	subR
	mulR
	addR
	sqrtR
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	jmp_false else.6
	pop_a 4
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
else.6
	pop_a 4
	pop_b 1
	pushB FALSE
.d 0 1 b
	rtn
